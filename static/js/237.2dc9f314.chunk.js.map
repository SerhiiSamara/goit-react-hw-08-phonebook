{"version":3,"file":"static/js/237.2dc9f314.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  width: 300px;\n  margin-left: 40px;\n  margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\n\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onInputChange = e => dispatch(changeFilter(e.target.value));\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" onChange={onInputChange} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  margin-left: 20px;\n  margin-top: 20px;\n  padding: 20px;\n  border: solid 2px #000;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 15px;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { addContact } from 'redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport { Label, Form, Input } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (\n      contacts.map(contact => contact.name).includes(form.elements.name.value)\n    ) {\n      alert(`${form.elements.name.value} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const User = styled.p`\n  width: 400px;\n  height: 20px;\n  margin-bottom: 20px;\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  height: 25px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Container, User, Button } from './Contact.styled';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const deleteUser = () => dispatch(deleteContact(id));\n  return (\n    <Container>\n      <User>\n        {name}: {number}\n      </User>\n      <Button type=\"button\" onClick={deleteUser}>\n        Delete\n      </Button>\n    </Container>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: inline-block;\n  width: 600px;\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-right: 0;\n  padding: 20px;\n`;\n\nexport const Item = styled.li`\n  width: 500px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nimport { Contact } from '../Contact/Contact';\nimport { Container, Item } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <Container>\n      {filteredContacts.map(({ name, number, id }) => (\n        <Item key={id}>\n          <Contact name={name} number={number} id={id} />\n        </Item>\n      ))}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-left: 40px;\n  margin-top: 20px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Title } from './Contacts.styled';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {contacts.length > 0 && (\n        <>\n          <ContactsList />\n        </>\n      )}\n      {isLoading && !error && <h4>Request in progress...</h4>}\n      {error && <h2>ERROR...</h2>}\n      {contacts.length <= 0 && !error && !isLoading && (\n        <h4>Sorry. Your phonebok is empty.</h4>\n      )}\n    </div>\n  );\n}\n"],"names":["Label","styled","Input","Filter","dispatch","useDispatch","type","name","onChange","e","changeFilter","target","value","Form","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useSelector","useState","setName","number","setNumber","handleChange","onSubmit","preventDefault","form","currentTarget","map","contact","includes","elements","alert","addContact","htmlFor","pattern","title","required","Container","User","Button","Contact","id","onClick","deleteContact","Item","ContactsList","filteredContacts","toLowerCase","Title","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}